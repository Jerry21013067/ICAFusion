# VisDrone2019-DET 数据集 https://github.com/VisDrone/VisDrone-Dataset
# 训练命令： python train.py --data VisDrone.yaml
# 默认数据集位置位于 YOLOv5 的同级目录：
#   /parent_folder
#     /VisDrone
#     /yolov5


# 训练、验证和测试数据的路径，可以是 1) 文件夹路径：path/images/，2) 文件路径：path/images.txt，或 3) 列表：[path1/images/, path2/images/]
train: ../VisDrone/VisDrone2019-DET-train/images  # 训练集图像路径，包含 6471 张图像
val: ../VisDrone/VisDrone2019-DET-val/images  # 验证集图像路径，包含 548 张图像
test: ../VisDrone/VisDrone2019-DET-test-dev/images  # 测试集图像路径，包含 1610 张图像

# 数据集的类别数量
nc: 10

# 数据集的类别名称
names: [ 'pedestrian', 'people', 'bicycle', 'car', 'van', 'truck', 'tricycle', 'awning-tricycle', 'bus', 'motor' ]


# 数据集下载命令/URL (可选) --------------------------------------------------------------------------------------
download: |
  from utils.general import download, os, Path
  
  # 定义将 VisDrone 数据集转换为 YOLO 格式的函数
  def visdrone2yolo(dir):
      from PIL import Image
      from tqdm import tqdm
      
      # 定义将 VisDrone 格式的边界框转换为 YOLO 格式的函数
      def convert_box(size, box):
          # Convert VisDrone box to YOLO xywh box
          dw = 1. / size[0]
          dh = 1. / size[1]
          return (box[0] + box[2] / 2) * dw, (box[1] + box[3] / 2) * dh, box[2] * dw, box[3] * dh
  
      # 创建标签目录
      (dir / 'labels').mkdir(parents=True, exist_ok=True)  # make labels directory
      # 遍历标注文件并转换
      pbar = tqdm((dir / 'annotations').glob('*.txt'), desc=f'Converting {dir}')
      for f in pbar:
          # 获取图像尺寸
          img_size = Image.open((dir / 'images' / f.name).with_suffix('.jpg')).size
          lines = []
          with open(f, 'r') as file:  # 读取 annotation.txt
              for row in [x.split(',') for x in file.read().strip().splitlines()]:
                  if row[4] == '0':  # VisDrone 'ignored regions' class 0
                      continue
                  cls = int(row[5]) - 1
                  box = convert_box(img_size, tuple(map(int, row[:4])))
                  lines.append(f"{cls} {' '.join(f'{x:.6f}' for x in box)}\n")
                  with open(str(f).replace(os.sep + 'annotations' + os.sep, os.sep + 'labels' + os.sep), 'w') as fl:
                      fl.writelines(lines)  # 写入 label.txt


  # 下载数据集
  dir = Path('../VisDrone')  # 数据集目录
  urls = ['https://github.com/ultralytics/yolov5/releases/download/v1.0/VisDrone2019-DET-train.zip',
          'https://github.com/ultralytics/yolov5/releases/download/v1.0/VisDrone2019-DET-val.zip',
          'https://github.com/ultralytics/yolov5/releases/download/v1.0/VisDrone2019-DET-test-dev.zip',
          'https://github.com/ultralytics/yolov5/releases/download/v1.0/VisDrone2019-DET-test-challenge.zip']
  download(urls, dir=dir)

  # 转换数据集格式
  for d in 'VisDrone2019-DET-train', 'VisDrone2019-DET-val', 'VisDrone2019-DET-test-dev':
      visdrone2yolo(dir / d)  # 将 VisDrone 标注转换为 YOLO 标签
